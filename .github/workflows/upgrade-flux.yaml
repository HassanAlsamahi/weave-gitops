name: Update Components

on:
  workflow_dispatch:
  schedule:
    - cron: "0 * * * *"
  push:
    branches: [main]

jobs:
  update-components:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16.x
      - name: Update component versions
        id: update
        run: |

          latestFluxVersion="$(curl -s --request GET --url "https://api.github.com/repos/fluxcd/flux2/releases?per_page=1" | jq . | jq '.[0] | .tag_name' | jq -r | sed -e 's/v//')"

          currentFluxVersion="$(sed -n 's/version="\([0-9\.]*\)"/\1/p' tools/dependencies.toml | head -1)"

          echo "$latestFluxVersion"
          echo "$currentFluxVersion"

          if [[ "$latestFluxVersion" == "$currentFluxVersion" ]]; then
            exit 0
          fi

          newContent=$(sed -e "/version\=\"[0-9\.]*\"/{s//version=\"$latestFluxVersion\"/;:a" -e '$!N;$!ba' -e '}' tools/dependencies.toml)

          echo "$newContent" > tools/dependencies.toml

          PR_BODY="
          **What changed?**
          Upgrade flux version from ${currentFluxVersion} to ${latestFluxVersion}

          **Why?**
          To be up to date with latest flux2 releases

          **How did you test it?**
          Test suites on CI

          **Release notes**

          **Documentation Changes**"

          PR_BODY="${PR_BODY//'%'/'%25'}"
          PR_BODY="${PR_BODY//$'\n'/'%0A'}"
          PR_BODY="${PR_BODY//$'\r'/'%0D'}"

          {
            # diff change
            git diff
            # export PR_BODY for PR and commit
            echo "::set-output name=pr_body::$PR_BODY"
            echo "::set-output name=pr_title::Upgrade flux version from $currentFluxVersion to $latestFluxVersion"
          }
      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v3
        with:
          token: ${{ secrets.WEAVE_GITOPS_TEST_WEAVEWORKS_WEAVE_GITOPS_BOT_TOKEN }}
          commit-message: |
            ${{ steps.update.outputs.pr_title }}
            ${{ steps.update.outputs.pr_body }}
          committer: GitHub <noreply@github.com>
          author: weave-test-user <weave-test-user@example.com>
          signoff: true
          branch: update-flux2-version
          title: ${{ steps.update.outputs.pr_title }}
          body: |
            ${{ steps.update.outputs.pr_body }}

      - name: Check output
        run: |
          echo "Pull Request Number - ${{ steps.cpr.outputs.pull-request-number }}"
          echo "Pull Request URL - ${{ steps.cpr.outputs.pull-request-url }}"